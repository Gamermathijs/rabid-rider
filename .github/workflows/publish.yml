# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  workflow_dispatch:
    inputs:
      releaseType:
        type: choice
        description: Release type
        required: true
        options:
          - release
          - prerelease
          - graduate
      version:
        type: string
        description: Version
      shortDescription:
        type: string
        description: Short description

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps: 
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
      - name: Edit version in build.gradle.kts
        run: |
            sed -i "s/version = ".*"/version = \"${{ github.event.inputs.version }}\"/g" build.gradle.kts

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          committer_name: Rabid Rider Bot
          committer_email: 155632846+rabid-rider-bot@users.noreply.github.com
          message: "Bump version to ${{ github.event.inputs.version }}"
          default_author: user_info
          add: 'build.gradle.kts'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.BOT_TOKEN }}
          branch: ${{ github.ref }}
      - run: chmod +x gradlew
      - name: Build with Gradle
        run: |
            ./gradlew build
      - name: Create release name
        id: create_relase_name
        run: |
          desc="${{ github.event.inputs.version }}"
          if [ -n "${{ github.event.inputs.shortDescription }}" ]; then
            desc="$desc: ${{ github.event.inputs.shortDescription }}"
          fi
          echo "Description=$desc" >> $GITHUB_OUTPUT
      - name: Create New Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}
          name: ${{ steps.create_relase_name.outputs.description }}
          draft: false
          artifacts: 'build/libs/*.jar'
          token: ${{ secrets.BOT_TOKEN }}
          generateReleaseNotes: true
    
      

